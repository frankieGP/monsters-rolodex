{"ast":null,"code":"var _jsxFileName = \"/Users/frankiegavin/Documents/GitHub/monsters-rolodex/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  } //Life Cycle Method\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users') //converts into a usable json format\n    .then(response => response.json()) //sets the users property of from the API response to the array of monsters\n    .then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, this.state.monsters.map(monster => React.createElement(\"h1\", {\n      key: monster.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, monster.name))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/frankiegavin/Documents/GitHub/monsters-rolodex/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","users","setState","render","map","monster","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,4CAAzB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC5BG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD,GAN2B,CAQ5B;;;AACAC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACA;AADA,KAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGA;AAHA,KAICF,IAJD,CAIMG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAEM;AAAZ,KAAd,CAJf;AAKD;;AACDE,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKT,KAAL,CAAWC,QAAX,CAAoBS,GAApB,CAAwBC,OAAO,IAC7B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuBD,OAAO,CAACE,IAA/B,CADF,CAFF,CADA,CADF;AAUD;;AA3ByB;;AA8B5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\nconstructor() {\n  super();\n  this.state = {\n    monsters: [] \n  };\n}\n\n//Life Cycle Method\ncomponentDidMount() {\n  fetch('https://jsonplaceholder.typicode.com/users')\n  //converts into a usable json format\n  .then(response => response.json())\n  //sets the users property of from the API response to the array of monsters\n  .then(users => this.setState({ monsters: users }));\n}\nrender() {\n    return (\n      <div className='App'>\n      <CardList>\n      {\n        this.state.monsters.map(monster => \n          <h1 key={monster.id}>{ monster.name }</h1>)\n      }\n      </CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}